plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.openapi.generator' version '6.4.0'
}

group = 'com.learning'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//implementation 'io.swagger:swagger-annoations:1.6.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.8'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
		  srcDirs("$buildDir/generated/src/main/java")
		}
	}
}
openApiGenerate {
	generatorName="spring"
	inputSpec = "$rootDir/src/main/resources/openapi/api.yaml".toString()
	outputDir = "$buildDir/generated".toString()
	apiPackage = "com.learning.openapiprovider"
	invokerPackage = "com.learning.openapiprovider.controller.invoker"
	modelPackage = "com.learning.openapiprovider.model"
	configOptions["interfaceOnly"] = "true"
	configOptions["library"] = "spring-boot"
	configOptions["useTags"] = "true"
	//configOptions["useJakartaEe"] = "true"
	configOptions["unHandledExceptions"] = "true"
	templateDir = "$rootDir/src/main/resources/templates".toString()
	
}
tasks.compileJava.dependsOn('openApiGenerate')
